name: cdvae-action

on:
  repository_dispatch:
    types: [build]
  schedule:
    - cron: "0 0 * * *"
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        export WANDB_ANONYMOUS=must
        python -m pip install --upgrade pip
        pip install torch==2.0.0
        pip install -q torch-scatter -f https://data.pyg.org/whl/torch-2.0.0.html
        pip install -q torch-sparse -f https://data.pyg.org/whl/torch-2.0.0.html
        pip install -q git+https://github.com/pyg-team/pytorch_geometric.git
        pip install -q pytorch-lightning wandb torchmetrics==0.6.0 pymatgen==2022.4.26
        pip install -q hydra-core jarvis-tools python-dotenv p-tqdm
        pip install -q p-tqdm flake8 pytest pycodestyle pydocstyle codecov pytest-cov coverage
        pip install -e .
        mkdir WABDB
        mkdir HYDRA_JOBS
        echo 'PIP freeze'
        pip freeze
        echo $PWD
        export HYDRA_FULL_ERROR=1
        export PROJECT_ROOT=$PWD
        export WABDB=$PWD/WABDB 
        export WABDB_DIR=$PWD/WABDB
        export HYDRA_JOBS=$PWD/HYDRA_JOBS
        export WANDB_ANONYMOUS=must
        coverage run -m pytest
        coverage report -m -i
        codecov --token="43acbae5-6738-4eae-967a-4f089e6c431e"
        python cdvae/run.py data=supercon expname=supercon
        # python cdvae/run.py data=perov expname=perov model.predict_property=True
      
