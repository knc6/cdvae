name: cdvae-action

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        
        conda env create -n cdvae --file env.kc.yml  
        conda init bash
        conda activate cdvae
        pip install -e .
        export PROJECT_ROOT=$PWD
        export WABDB=$PWD/WABDB 
        export HYDRA_JOBS=$PWD/HYDRA_JOBS        

#    - name: Lint
#      run: |
#        pip install flake8 pytest pycodestyle pydocstyle
#        pycodestyle --ignore E203,W503 --exclude=tests cdvae
#        pydocstyle --match-dir=core --match-dir=io --match-dir=io --match-dir=ai --match-dir=analysis --match-dir=db --match-dir=tasks --count cdvae
#        flake8 --ignore E203,W503 --exclude=tests --statistics --count --exit-zero cdvae
#     - name: Test with pytest
#       run: |
#         export DGLBACKEND=pytorch
#         pip install flake8 pytest pycodestyle pydocstyle codecov pytest-cov coverage 
#         echo 'PIP freeze'
#         pip freeze
#         coverage run -m pytest
#         coverage report -m
#         codecov
#         codecov --token="85bd9c5d-9e55-4f6d-bd69-350ee5e3bb41"
#         echo 'Train folder'
#         train_folder.py -h 
#         echo 'Pre-trained models'
#         pretrained.py -h
#         #train_folder.py --root_dir "alignn/examples/sample_data" --config "alignn/examples/sample_data/config_example.json" --output_dir=temp
